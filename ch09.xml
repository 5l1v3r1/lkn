<chapter id="LKN-recipie">

<!--
AO: Some general notes to remember:

I think it could get tiresome to keep saying "Then..." or "Also..."
I think you can just list steps. Readers will assume the steps are
done in order. Sometimes, readers may even want to skip around, so
order is not that important (for xconfig and menuconfig builds). I
did keep one "Also" below because it seemed to fit in well.

Avoid future tense; talk about what the kernel does in the present
(even though it will happen in the future, after building and
booting).

Refer to options such as "SCSI disk support" without any "the." You
can also say 'the "SCSI disk support" option' but there's no need to
add that extra text.
-->
<!--

  AO: A couple more general notes:

About "which" and "that."  You should use "which" for an extra clause
that isn't strictly needed for the sentence to make sense.  If the
clause could be removed and the sentence would still work, use
"which." Also use commas around the clause, as shown here:

        I can't stand being outside when my neighber uses a
        gas-powered lawn mower, which runs at about 110 decibels.

When the clause is required, use "that" and no commas:

        I can't stand being outside when my neighber uses a
        gas-powered lawn mower that runs at about 110 decibels.

(In other words, I can tolerate other kinds of gas-powered lawn mowers.)

To use English-teacher jargon, one uses "that" for descriptive clauses and "which" for restrictive ones.

The British tend to use "which" a lot where American usage is "that."

...

Using "such as" and "like": this is not very important, but our style
guide distinguishes between these. If you are citing EXAMPLES of
something, use "such as." For instance:

	Large companies such as IBM and Hewlett Packard promote
	Linux...

Reserve "like" for more metaphorical situations; these are NOT
examples.

	People treat the claims of these large companies like
	politicians.

...

The word "only." Very important and valuable, but I like to use it in
the right place as defined by English experts. Most writers aren't
sticklers as much as I am, but I think doing it right really makes
things clear for the reader.  The rule is: "Use 'only' before the word
that it modifies." Here are two sentences that show how the location
of "only" makes a difference:

	This network layer only reads the headers on the packets.
	This network layer reads only the headers on the packets.

The first sentence implies, "The layer reads the headers but does not
create or write them." The second sentence implies, "The layer reads
headers but not the contents of the data (for the purposes of
check-summing, etc.)." Probably the writer in this case wants the
latter meaning. But many writers would write the first sentence, which
is formally incorrect and could confuse the reader.

-->


<title>
Kernel Configuration Recipes
</title>


<sect1>
<title>Disks</title>

<simplesect>

<!--

  AO: We should have a little text between sect1 and sect2, although
  it's not absolutely required in a reference work. I just put in some
  junk that I thought might set a context; you can change it.

-->
<para>
There are a wide range of different disk types that is supported by the
Linux kernel.  This section shows how to make sure the kernel can
support a few of the more common types of disk controllers.
</para>

</simplesect>

<sect2 id="lkn_usb_storage">
<title>USB storage</title>

<para>
To use a USB storage device (commonly referred to as USB "flash"
devices) USB support must be fist working properly.  Refer to the recipe
in <xref linkend="lkn_usb" /> for how to do this.
</para>

<para>
A USB storage device can be identified by using the
<literal>lsusb</literal> program.  If the following command sequence
produces the expected result, a USB storage device is present on the
system:
<!-- gkh -
	What is the proper formatting for typing things on the command
	line and the result?
-->
<screen>
$ /usr/sbin/lsusb -v | grep Storage
      bInterfaceClass         8 Mass Storage
</screen>
</para>

<para>
A USB Storage device is in reality a USB SCSI device that talks over a
USB connection.  Because of this, the SCSI subsystem must be enabled:
<screen>
Device Drivers
	SCSI Device Support
		[*] SCSI Device Support
</screen>

Also in the SCSI system, the "SCSI disk support" must be enabled in
order for the device to be mounted properly:
<screen>
Device Drivers
	SCSI Device Support
		[*] SCSI disk support
</screen>

Enable USB Storage support:
<screen>
Device Drivers
	USB Support
	[M] USB Mass Storage support
</screen>

A number of specific USB storage devices are listed as separate
configuration items, as they do not follow the standard USB
specification and require special code.  If you have one of these
devices, please enable support for them.
</para>
</sect2>

<sect2 id="lkn_sata">
<title>Serial ATA (SATA)</title>

<para>
SATA is a type of disk controller that is the successor to the IDE bus.
To determine if you have a SATA disk controller on the system, run the
following command:
<screen>
$ /usr/sbin/lspci | grep SATA
00:1f.2 IDE interface: Intel Corporation 82801EB (ICH5) SATA Controller (rev 02)
</screen>
Note that your response will probably not match identically, all that is
important is that the command shows some SATA devices.
</para>

<para>
SATA disks use a kernel library called <emphasis>libata</emphasis> that handles most of the
SATA specific functionality.  That library uses the SCSI layer to talk
to the block layer, so many different kernel options need to be enabled
in order for SATA disks to work properly.
Enable PCI support for the kernel:
<screen>
Bus Options (PCI, PCMCIA, EISA, MCA, ISA)
	[*] PCI Support
</screen>

Enable the SCSI subsystem:
<screen>
Device Drivers
	SCSI Device Support
		[*] SCSI Device Support
</screen>

Also in the SCSI system, the "SCSI disk support" must be enabled in
order for the device to be mounted properly:
<screen>
Device Drivers
	SCSI Device Support
		[*] SCSI disk support
</screen>

The SATA options are under the "SCSI low-level drivers" section:
<screen>
Device Drivers
	SCSI Device Support
		SCSI low-level drivers
			[*] Serial ATA (SATA) support
</screen>

In that section, enable the specific SATA controller type that you have.
Look at the output of the above mentioned <literal>lspci</literal>
command for a list of the types of SATA controllers that are present on
your system.  For example, most motherboards from Intel would require the PIIX/ICH
SATA driver (as the above example showed.)
<screen>
Device Drivers
	SCSI Device Support
		SCSI low-level drivers
			[*] Serial ATA (SATA) support
			[*]   Intel PIIX/ICH SATA support
</screen>


</para>
</sect2>

<sect2 id="lkn_burn_cdrom">
<title>Burning a CDROM</title>
</sect2>

</sect1>

<sect1>
<title>Devices</title>

<simplesect>
Linux supports a vast range of different types of devices (more than any
other operating system ever has).  This section shows how to enable
some of the more common types of devices.
</simplesect>

<sect2 id="lkn_usb">
<title>USB</title>

<para>
Linux supports lots of different types of USB devices.  To enable USB
support, you must first enable support for a USB controller, which
drives the USB connection on the machine.
</para>

<para>
To determine if your machine has a USB controller present, and which type
is is, run the following command:
<screen>
$ /usr/sbin/lspci | grep USB
00:1d.0 USB Controller: Intel Corporation 82801EB/ER (ICH5/ICH5R) USB UHCI Controller #1 (rev 02)
00:1d.1 USB Controller: Intel Corporation 82801EB/ER (ICH5/ICH5R) USB UHCI Controller #2 (rev 02)
00:1d.2 USB Controller: Intel Corporation 82801EB/ER (ICH5/ICH5R) USB UHCI Controller #3 (rev 02)
00:1d.3 USB Controller: Intel Corporation 82801EB/ER (ICH5/ICH5R) USB UHCI Controller #4 (rev 02)
00:1d.7 USB Controller: Intel Corporation 82801EB/ER (ICH5/ICH5R) USB2 EHCI Controller (rev 02)
</screen>
Note that your response will probably not match identically, all that is
important is that the command shows some USB controllers.
</para>

<para>
Enable PCI support for the kernel:
<screen>
Bus Options (PCI, PCMCIA, EISA, MCA, ISA)
	[*] PCI Support
</screen>

Enable USB support for the kernel:
<screen>
Device Drivers
	USB Support
		[M] Support for Host-side USB
</screen>

Enable the specific USB Host controllers for your machine (it is safe to
enable them all if you do not know which you have):
<screen>
Device Drivers
	USB Support
	---   USB Host Controller Drivers
	[M]   EHCI HCD (USB 2.0) support
	[M]   OHCI HCD support
	[M]   UHCI HCD (most Intel and VIA) support
</screen>

Individual USB devices also need their drivers to be enabled.  A large
majority of them are under the main USB driver section:
<screen>
Device Drivers
	USB Support
</screen>
<!--

  AO: I think it's a good idea to put names of menu items in <literal>
  tags. That's because some names may be long phrases that look odd
  when dropped in a sentence; they need a font change. On the other
  hand, something such "main USB driver section" is a generic
  reference to USB; it's safe to leave that in plain font. Use what
  feels right in each case.

-->

But some, such as USB video and DVB and sound devices are listed in the
section controlling all of these types of devices.  For example, the USB
sound driver can be found under the <literal>Sound</literal> menu:
<screen>
Device drivers
	Sound
		[*] Sound card support
			[*] Advanced Linux Sound Architecture
				USB Devices
					[M] USB Audio/MIDI driver
</screen>
</para>

</sect2>

<sect2 id="lkn_firewire">
<title>IEEE 1394 (FireWire)</title>

<para>
IEEE 1394 is commonly known by the name FireWire, under which Apple
computer publicized it. It is a
highspeed bus that connects external devices, much as USB does.
</para>

<para>
To determine if your machine has a FireWire controller present, and which type
is is, run the following command:
<screen>
$ /usr/sbin/lspci | grep FireWire
06:0c.0 FireWire (IEEE 1394): Texas Instruments TSB43AB22/A IEEE-1394a-2000 Controller (PHY/Link)
06:0d.2 FireWire (IEEE 1394): Creative Labs SB Audigy FireWire Port (rev 04)
</screen>
Note that your response will probably not match identically, all that is
important is that the command shows some FireWire controllers.
</para>

<para>
Enable PCI support for the kernel:
<screen>
Bus Options (PCI, PCMCIA, EISA, MCA, ISA)
	[*] PCI Support
</screen>

Enable IEEE 1394 support for the kernel:
<screen>
Device Drivers
	IEEE 1394 (FireWire) support
		[*] IEEE 1394 (FireWire) support
</screen>

Enable the specific type of Firewire host controller that you have:
<screen>
Device Drivers
	IEEE 1394 (FireWire) support
		[*] IEEE 1394 (FireWire) support
		---   Device Drivers
		[M]   Texas Instruments PCILynx support
		[M]   OHCI-1394 support

</screen>

And enable the specific type of Firewire devices that you have:
<screen>
Device Drivers
	IEEE 1394 (FireWire) support
		[*] IEEE 1394 (FireWire) support
		---   Protocol Drivers
		[M]   OHCI-1394 Video support
		[M]   SBP-2 support (Harddisks etc.)
		[ ]     Enable Phys DMA support for SBP2 (Debug)
		[M]   Ethernet over 1394
		[M]   OHCI-DV I/O support
		[M]   Raw IEEE1394 I/O support
</screen>
</para>
</sect2>

<sect2 id="lkn_pci_hotplug">
<title>PCI hotplug</title>

<para>
PCI hotplug systems are becoming more popular with the use of
ExpressCard and laptop docking stations.
</para>

<para>
To determine if your machine has a ExpressCard controller present, and
which type is is, run the following command:
<screen>
FIXME!!!
</screen>
Note that your response will probably not match identically, all that is
important is that the command shows some controllers.
</para>

<para>
Enable PCI support for the kernel:
<screen>
Bus Options (PCI, PCMCIA, EISA, MCA, ISA)
	[*] PCI Support
</screen>
Enable PCI Hotplug support for the kernel:
<screen>
Bus Options (PCI, PCMCIA, EISA, MCA, ISA)
	[*] PCI Support
	PCI Hotplug Support
		[M] Support for PCI Hotplug (EXPERIMENTAL)
</screen>

There is a wide range of different types of PCI Hotplug controllers.
For most laptops and for ExpressCard support, enable the ACPI
controller:
<screen>
Bus Options (PCI, PCMCIA, EISA, MCA, ISA)
	[*] PCI Support
	PCI Hotplug Support
		[M] Support for PCI Hotplug (EXPERIMENTAL)
		[M]   ACPI PCI Hotplug driver
</screen>

As well as the PCI Express controller:
<screen>
Bus Options (PCI, PCMCIA, EISA, MCA, ISA)
	[*] PCI Support
	[*] PCI Express Support
	[M]   PCI Express Hotplug driver
</screen>
</para>
</sect2>

<sect2 id="lkn_pcmcia">
<title>PCMCIA / CardBus</title>

<!--

  AO: Let's make sure to do cross-references in a way that will
  translate during conversion; see what I did with xref.

-->
<para>
PCMCIA and CardBus device support is in almost every laptop manufactured.  Newer
laptops, however, are switching to the ExpressCard format (see the PCI Hotplug
recipe in <xref linkend="lkn_pci_hotplug" />).
</para>

<para>
To determine if your machine has a PCMCIA controller present, and which
type is is, run the following command:
<screen>
FIXME!!!
</screen>
Note that your response will probably not match identically, all that is
important is that the command shows some controllers.
</para>

<para>
Enable PCI support for the kernel:
<screen>
Bus Options (PCI, PCMCIA, EISA, MCA, ISA)
	[*] PCI Support
</screen>

Enable PCCARD support for the kernel:
<screen>
Bus Options (PCI, PCMCIA, EISA, MCA, ISA)
	PCCARD (PCMCIA/CardBus) support
		[M] PCCard (PCMCIA/CardBus) support
</screen>

Enable both PCMCIA and CardBus support to cover the widest range of
devices:
<screen>
Bus Options (PCI, PCMCIA, EISA, MCA, ISA)
	PCCARD (PCMCIA/CardBus) support
		[M] PCCard (PCMCIA/CardBus) support
		[M]   16-bit PCMCIA support
		[*]   32-bit CardBus support
</screen>

Enable the card bridge type for your laptop.  The most common one is the
"yenta-like" controller:
<screen>
Bus Options (PCI, PCMCIA, EISA, MCA, ISA)
	PCCARD (PCMCIA/CardBus) support
		[M] PCCard (PCMCIA/CardBus) support
		[M]   CardBus yenta-compatible bridge support
		[ ]   Cirrus PD6729 compatible bridge support
		[ ]   i82092 compatible bridge support
		[ ]   i82365 compatible bridge support
		[ ]   Databook TCIC host bridge support
</screen>
</para>
</sect2>

<sect2 id="sound">
<title>Sound (ALSA)</title>

<para>
ALSA (Advanced Linux Sound Architecture) is the second type of sound
system for the Linux kernel.  The first type of sound system (OSS) has
been depreciated and almost all of the older drivers have been removed
from the kernel source tree.
</para>

<para>
To determine which type of sound controller is present in your machine,
and what type it is, run the following command:
<screen>
$ /usr/sbin/lspci | grep -i audio
00:1f.5 Multimedia audio controller: Intel Corporation 82801EB/ER (ICH5/ICH5R) AC'97 Audio Controller (rev 02)
06:0d.0 Multimedia audio controller: Creative Labs SB Audigy (rev 04)
</screen>
Note that your response will probably not match identically, all that is
important is that the command shows some FireWire controllers.
</para>

<para>
Enable basic sound support:
<screen>
Device Drivers
	Sound
		[M] Sound Card Support
</screen>
Enable ALSA:
<screen>
Device Drivers
	Sound
		[M] Sound Card Support
			[M] Advanced Linux Sound Architecture
</screen>
There are a number of different base ALSA options, such as support for
the older <literal>OSS</literal> sound protocol.  If you have older
applications, you should enable these options:
<screen>
Device Drivers
	Sound
		[M] Sound Card Support
			[M] Advanced Linux Sound Architecture
			[M]   OSS Mixer API
			[M]   OSS PCM (digital audio) API
			[ ]     OSS PCM (digital audio) API - Include plugin system
</screen>

Enable the specific type of sound device that you have.  PCI sound cards
are under the PCI submenu:
<screen>
Device Drivers
	Sound
		[M] Sound Card Support
			[M] Advanced Linux Sound Architecture
			    PCI Devices
</screen>


</para>
</sect2>

</sect1>

<sect1>
<title>CPU</title>

<sect2 id="processor">
<title>processor types</title>
</sect2>

<sect2 id="suspend">
<title>suspend</title>
</sect2>

<sect2 id="cpufreq">
<title>cpu frequency scaling</title>
</sect2>

<sect2 id="acpi">
<title>ACPI</title>
</sect2>

<sect2 id="smp">
<title>SMP</title>
</sect2>

<sect2 id="mm">
<title>different memory models</title>
</sect2>

<sect2 id="preempt">
<title>Preemption</title>
</sect2>

</sect1>

<sect1>
<title>Networking</title>

<sect2 id="netfilter">
<title>Netfilter</title>
</sect2>

<sect2 id="netdrv">
<title>network drivers</title>
</sect2>

<sect2 id="irda">
<title>Irda</title>
</sect2>

<sect2 id="wireless">
<title>wireless</title>
</sect2>

</sect1>

<sect1>
<title>Filesystems</title>
<simplesect>
</simplesect>

<sect2 id="raid">
<title>RAID</title>
</sect2>

<sect2 id="lvm">
<title>LVM</title>
</sect2>

<sect2 id="dm">
<title>DM</title>
</sect2>

<sect2 id="samba">
<title>Samba</title>
</sect2>

<sect2 id="journal_fs">
<title>Journaling filesystems</title>
</sect2>

<sect2 id="ocfs2">
<title>OCFS2</title>
</sect2>

</sect1>

<sect1>
<title>Security</title>

<simplesect>
</simplesect>

<sect2 id="selinux">
<title>SELinux</title>
</sect2>

<!--  If this makes it into the kernel tree, uncomment this section...
<sect2 id="apparmor">
<title>AppArmor</title>
-->

</sect1>

<sect1>
<title>Kernel debugging</title>

</sect1>


</chapter>
<!-- vim: set ai tw=72 : -->
