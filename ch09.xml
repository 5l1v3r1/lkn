<chapter id="LKN-recipie">

<!--
AO: Some general notes to remember:

I think it could get tiresome to keep saying "Then..." or "Also..."
I think you can just list steps. Readers will assume the steps are
done in order. Sometimes, readers may even want to skip around, so
order is not that important (for xconfig and menuconfig builds). I
did keep one "Also" below because it seemed to fit in well.

Avoid future tense; talk about what the kernel does in the present
(even though it will happen in the future, after building and
booting).

Refer to options such as "SCSI disk support" without any "the." You
can also say 'the "SCSI disk support" option' but there's no need to
add that extra text.
-->
<!--

  AO: A couple more general notes:

About "which" and "that."  You should use "which" for an extra clause
that isn't strictly needed for the sentence to make sense.  If the
clause could be removed and the sentence would still work, use
"which." Also use commas around the clause, as shown here:

        I can't stand being outside when my neighber uses a
        gas-powered lawn mower, which runs at about 110 decibels.

When the clause is required, use "that" and no commas:

        I can't stand being outside when my neighber uses a
        gas-powered lawn mower that runs at about 110 decibels.

(In other words, I can tolerate other kinds of gas-powered lawn mowers.)

To use English-teacher jargon, one uses "that" for descriptive clauses and "which" for restrictive ones.

The British tend to use "which" a lot where American usage is "that."

...

Using "such as" and "like": this is not very important, but our style
guide distinguishes between these. If you are citing EXAMPLES of
something, use "such as." For instance:

	Large companies such as IBM and Hewlett Packard promote
	Linux...

Reserve "like" for more metaphorical situations; these are NOT
examples.

	People treat the claims of these large companies like
	politicians.

...

The word "only." Very important and valuable, but I like to use it in
the right place as defined by English experts. Most writers aren't
sticklers as much as I am, but I think doing it right really makes
things clear for the reader.  The rule is: "Use 'only' before the word
that it modifies." Here are two sentences that show how the location
of "only" makes a difference:

	This network layer only reads the headers on the packets.
	This network layer reads only the headers on the packets.

The first sentence implies, "The layer reads the headers but does not
create or write them." The second sentence implies, "The layer reads
headers but not the contents of the data (for the purposes of
check-summing, etc.)." Probably the writer in this case wants the
latter meaning. But many writers would write the first sentence, which
is formally incorrect and could confuse the reader.

-->


<title>
Kernel Configuration Recipes
</title>


<sect1>
<title>Disks</title>

<simplesect>

<!--

  AO: We should have a little text between sect1 and sect2, although
  it's not absolutely required in a reference work. I just put in some
  junk that I thought might set a context; you can change it.

-->
<para>
There are a wide range of different disk types that is supported by the
Linux kernel.  This section shows how to make sure the kernel can
support a few of the more common types of disk controllers.
</para>

</simplesect>

<sect2>
<title>USB storage</title>

<para>
A USB Storage device is in reality a USB SCSI device that talks over a
USB connection.  Because of this, the SCSI subsystem must be enabled:
<!--

  AO: I'll ask design and tools whether they have a better suggestion
  to replace the mess below. I do want to find something that looks
  nicer than pre-formatted code output, although at this stage we
  might want to save time by just wrapping all kernel options in
  <programlisting> tags.

-->
<screen>
Device Drivers
	SCSI Device Support
		<*> SCSI Device Support
</screen>

Also in the SCSI system, the "SCSI disk support" must be enabled in
order for the device to be mounted properly:
<screen>
Device Drivers
	SCSI Device Support
		<*> SCSI disk support
</screen>

Enable PCI support for the kernel:
<screen>
Bus Options (PCI, PCMCIA, EISA, MCA, ISA)
	[*] PCI Support
</screen>

Enable USB support for the kernel:
<screen>
Device Drivers
	USB Support
		<M> Support for Host-side USB
</screen>

Also enable the USB Host controllers that allow USB to work properly on
the machine:
<screen>
Device Drivers
	USB Support
	---   USB Host Controller Drivers
	<M>   EHCI HCD (USB 2.0) support
	<M>   OHCI HCD support
	<M>   UHCI HCD (most Intel and VIA) support
</screen>

Enable USB Storage support:
<screen>
Device Drivers
	USB Support
	<M> USB Mass Storage support
</screen>

A number of specific USB storage devices are listed as separate
configuration items, as they do not follow the standard USB
specification and require special code.  If you have one of these
devices, please enable support for them.
</para>
</sect2>

<sect2>
<title>Serial ATA (SATA)</title>

<para>
SATA disks use a kernel library called <emphasis>libata</emphasis> that handles most of the
SATA specific functionality.  That library uses the SCSI layer to talk
to the block layer, so many different kernel options need to be enabled
in order for SATA disks to work properly.
</para>

Enable PCI support for the kernel:
	Bus Options (PCI, PCMCIA, EISA, MCA, ISA)
		[*] PCI Support

Enable the SCSI subsystem:
	Device Drivers
		SCSI Device Support
			<*> SCSI Device Support

Also in the SCSI system, the "SCSI disk support" must be enabled in
order for the device to be mounted properly:
	Device Drivers
		SCSI Device Support
			<*> SCSI disk support

The SATA options are under the "SCSI low-level drivers" section:
	Device Drivers
		SCSI Device Support
			SCSI low-level drivers
				<*> Serial ATA (SATA) support

In that section, enable the specific SATA controller type that you have.
For example, most motherboards from Intel would require the PIIX/ICH
SATA driver:
	Device Drivers
		SCSI Device Support
			SCSI low-level drivers
				<*> Serial ATA (SATA) support
				<*>   Intel PIIX/ICH SATA support


</sect2>

<sect2>
<title>Burning a CDROM</title>
</sect2>

<sect2>
<title>USB</title>

Linux supports a vast array of different USB devices.  To enable USB
support, you must enable support for a USB controller, which drives the
USB connection on the machine:

Enable PCI support for the kernel:
	Bus Options (PCI, PCMCIA, EISA, MCA, ISA)
		[*] PCI Support

Enable USB support for the kernel:
	Device Drivers
		USB Support
			<M> Support for Host-side USB

Enable the specific USB Host controllers for your machine (it is safe to
enable them all if you do not know which you have):
	Device Drivers
		USB Support
		---   USB Host Controller Drivers
		<M>   EHCI HCD (USB 2.0) support
		<M>   OHCI HCD support
		<M>   UHCI HCD (most Intel and VIA) support

Individual USB devices also need their drivers to be enabled.  A large
majority of them are under the main USB driver section:
	Device Drivers
		USB Support

<!--

  AO: I think it's a good idea to put names of menu items in <literal>
  tags. That's because some names may be long phrases that look odd
  when dropped in a sentence; they need a font change. On the other
  hand, something such "main USB driver section" is a generic
  reference to USB; it's safe to leave that in plain font. Use what
  feels right in each case.

-->

But some, such as USB video and DVB and sound devices are listed in the
section controlling all of these types of devices.  For example, the USB
sound driver can be found under the <literal>Sound</literal> menu:
	Device drivers
		Sound
			<*> Sound card support
				<*> Advanced Linux Sound Architecture
					USB Devices
						<M> USB Audio/MIDI driver

</sect2>

<sect2>
<title>IEEE 1394 (FireWire)</title>

IEEE 1394 is commonly known by the name Firewire, under which Apple
computer publicized it. It is a
highspeed bus that connects external devices, much as USB does.

Enable PCI support for the kernel:
	Bus Options (PCI, PCMCIA, EISA, MCA, ISA)
		[*] PCI Support

Enable IEEE 1394 support for the kernel:
	Device Drivers
		IEEE 1394 (FireWire) support
			<*> IEEE 1394 (FireWire) support

Enable the specific type of Firewire host controller that you have:
	Device Drivers
		IEEE 1394 (FireWire) support
			<*> IEEE 1394 (FireWire) support
			---   Device Drivers
			<M>   Texas Instruments PCILynx support
			<M>   OHCI-1394 support

And enable the specific type of Firewire devices that you have:
	Device Drivers
		IEEE 1394 (FireWire) support
			<*> IEEE 1394 (FireWire) support
			---   Protocol Drivers
			<M>   OHCI-1394 Video support
			<M>   SBP-2 support (Harddisks etc.)
			[ ]     Enable Phys DMA support for SBP2 (Debug)
			<M>   Ethernet over 1394
			<M>   OHCI-DV I/O support
			<M>   Raw IEEE1394 I/O support

</sect2>

<sect2 id="lkn_pci_hotplug">
<title>PCI hotplug</title>

PCI hotplug systems are becoming more popular with the use of
ExpressCard and laptop docking stations.

Enable PCI support for the kernel:
	Bus Options (PCI, PCMCIA, EISA, MCA, ISA)
		[*] PCI Support

Enable PCI Hotplug support for the kernel:
	Bus Options (PCI, PCMCIA, EISA, MCA, ISA)
		[*] PCI Support
		PCI Hotplug Support
			<M> Support for PCI Hotplug (EXPERIMENTAL)

There is a wide range of different types of PCI Hotplug controllers.
For most laptops and for ExpressCard support, enable the ACPI
controller:
	Bus Options (PCI, PCMCIA, EISA, MCA, ISA)
		[*] PCI Support
		PCI Hotplug Support
			<M> Support for PCI Hotplug (EXPERIMENTAL)
			<M>   ACPI PCI Hotplug driver

As well as the PCI Express controller:
	Bus Options (PCI, PCMCIA, EISA, MCA, ISA)
		[*] PCI Support
		[*] PCI Express Support
		<M>   PCI Express Hotplug driver

</sect2>

<sect2>
<title>PCMCIA</title>

<!--

  AO: Let's make sure to do cross-references in a way that will
  translate during conversion; see what I did with xref.

-->

PCMCIA and CardBus device support is in almost every laptop manufactured.  Newer
laptops, however, are switching to the ExpressCard format (see the PCI Hotplug
recipe in <xref linkend="lkn_pci_hotplug" />).

Enable PCI support for the kernel:
	Bus Options (PCI, PCMCIA, EISA, MCA, ISA)
		[*] PCI Support

Enable PCCARD support for the kernel:
	Bus Options (PCI, PCMCIA, EISA, MCA, ISA)
		PCCARD (PCMCIA/CardBus) support
			<M> PCCard (PCMCIA/CardBus) support

Enable both PCMCIA and CardBus support to cover the widest range of
devices:
	Bus Options (PCI, PCMCIA, EISA, MCA, ISA)
		PCCARD (PCMCIA/CardBus) support
			<M> PCCard (PCMCIA/CardBus) support
			<M>   16-bit PCMCIA support
			[*]   32-bit CardBus support

Enable the card bridge type for your laptop.  The most common one is the
"yenta-like" controller:
	Bus Options (PCI, PCMCIA, EISA, MCA, ISA)
		PCCARD (PCMCIA/CardBus) support
			<M> PCCard (PCMCIA/CardBus) support
			<M>   CardBus yenta-compatible bridge support
			< >   Cirrus PD6729 compatible bridge support
			< >   i82092 compatible bridge support
			< >   i82365 compatible bridge support
			< >   Databook TCIC host bridge support

</sect2>

<sect2>
Sound (ALSA)
</sect2>

</sect1>


</chapter>
<!-- vim: set ai tw=72 : -->
