<chapter id="LKN-chapter-history">

<title>Kernel History and Background</title>

<para>
Despite it's large code base (over 7 million lines of code), the Linux
kernel is the most flexible operating system that has ever been created.
It can be tuned for a wide range of different systems, running on
everything from a radio-controlled model helicoptor, to a cellphone, to the
majority of the largest supercomputers in the world.  By customizing the
kernel for your specific environment, it is possible to create something
that is both smaller and faster than the kernel provided by most Linux
distributions.  This book will go into how to build and install a custom
kernel, and provide some hints on how to enable specific options that you
will probably wish to use for different situations.
</para>

<!--

  AO: I decided that paragraph made a good start, and I added the
  following.

  gkh: looks good, I've edited it a bit.

-->

<para>
No Linux distribution provides the exact kernel most of its users want.
Modern distributions have gotten very accommodating, compiling in support
for every known device, for sound, and even for power conservation.  But
you will likely have a need that's different from the majority of users
(and every distribution has to try to meet the needs of the majority). You
may just have different hardware. And when a new kernel comes out, you may
want to start using it without waiting for a distribution to be built
around it.
</para>

<para>
For a host of reasons, you will want during your Linux career to sometimes
build a kernel, or to tweak the parameters of one you are running. This
book gives you the information you need to understand the kernel from a
user's point of view, and to make the most common changes.
</para>

<para>
There are also good reasons to take features out of the kernel,
particularly if you are running it on an embedded system or one with a
small form factor.
</para>

<para>
When tweaking, it's helpful to understand the internals of kernel behavior.
These are beyond the scope of this book, except for brief summaries that
appear with certain options. The bibliography includes references to other
books and material that can give you more background.
</para>

<sect1>
<title>Beginning</title>

<para>
The Linux kernel started its development cycle in September
1991 with this post from Linus Torvalds in the Usenet newsgroup
<literal>comp.os.minix</literal>:
</para>

<!-- gkh: should "blockquote" be used here instead? -->
<screen>
Date:	 	Fri, Oct 4 1991 10:41 pm
Email: 		torva...@klaava.Helsinki.FI (Linus Benedict Torvalds)
Groups: 	comp.os.minix

Do you pine for the nice days of minix-1.1, when men were men and wrote
their own device drivers? Are you without a nice project and just dying
to cut your teeth on a OS you can try to modify for your needs? Are you
finding it frustrating when everything works on minix? No more all-
nighters to get a nifty program working? Then this post might be just
for you :-)

As I mentioned a month(?) ago, I'm working on a free version of a
minix-lookalike for AT-386 computers.  It has finally reached the stage
where it's even usable (though may not be depending on what you want),
and I am willing to put out the sources for wider distribution.  It is
just version 0.02 (+1 (very small) patch already), but I've successfully
run bash/gcc/gnu-make/gnu-sed/compress etc under it.
<!--

  AO: I would end the quotation here. The rest is uninteresting
  short-term detail, in my opinion. Perhaps leave in the "Why"
  paragraph.

-->
...
<!--
Sources for this pet project of mine can be found at nic.funet.fi
(128.214.6.100) in the directory /pub/OS/Linux.  The directory also
contains some README-file and a couple of binaries to work under linux
(bash, update and gcc, what more can you ask for :-).  Full kernel
source is provided, as no minix code has been used.  Library sources are
only partially free, so that cannot be distributed currently.  The
system is able to compile "as-is" and has been known to work.  Heh.
Sources to the binaries (bash and gcc) can be found at the same place in
/pub/gnu.

ALERT! WARNING! NOTE! These sources still need minix-386 to be compiled
(and gcc-1.40, possibly 1.37.1, haven't tested), and you need minix to
set it up if you want to run it, so it is not yet a standalone system
for those of you without minix. I'm working on it. You also need to be
something of a hacker to set it up (?), so for those hoping for an
alternative to minix-386, please ignore me. It is currently meant for
hackers interested in operating systems and 386's with access to minix.

The system needs an AT-compatible harddisk (IDE is fine) and EGA/VGA. If
you are still interested, please ftp the README/RELNOTES, and/or mail me
for additional info.
-->

I can (well, almost) hear you asking yourselves "why?".  Hurd will be
out in a year (or two, or next month, who knows), and I've already got
minix.  This is a program for hackers by a hacker.  I've enjouyed doing
it, and somebody might enjoy looking at it and even modifying it for
their own needs.  It is still small enough to understand, use and
modify, and I'm looking forward to any comments you might have.

I'm also interested in hearing from anybody who has written any of the
utilities/library functions for minix. If your efforts are freely
distributable (under copyright or even public domain), I'd like to hear
from you, so I can add them to the system.  I'm using Earl Chews estdio
right now (thanks for a nice and working system Earl), and similar works
will be very wellcome. Your (C)'s will of course be left intact. Drop me
a line if you are willing to let me use your code.

             Linus
</screen>

<para>
With that auspicious beginning, the Linux kernel was born, and in 15 years,
has grown into something that supports more different processors and more
different devices than any other operating system ever has.
</para>

<!--
  gkh:  Do I really need to go into a large history of Linux here?  Doesn't
  	everyone know it by now?
	And do I need to describe the different development trees of the past,
	as that is no longer an issue now?

  ao: I don't know of any historical issues that affect current
  users. Gee, maybe this whole section is redundant.

-->

</sect1>

<sect1>
<title>Using this book</title>

<para>
do not be root!
</para>
</sect1>


</chapter>

<!-- vim: set ai tw=75 : -->
