<!--<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">-->
<chapter id="LKN-command-line">

<title>Kernel boot command line reference
<footnote>
<para>
The majority of this chapter is based on the in-kernel documentation for the
different kernel boot command line reference options, which were written by the
kernel developers and released under the GPL.
</para>
</footnote>
</title>


<para>
The kernel has a wide variety of different command line options that are
able to control lots of different actions.  This chapter documents the
majority of them, breaking them down into different logical sections.  A
number of architecture specific and individual driver options are not
listed here.  For a complete list of all known options, please see the
kernel file, <filename>Documentation/kernel-parameters.txt</filename>
and the individual architecture specific documentation files.
</para>

<para>
Along with all of the different options show here, all modules
paramaters are able to be passed on the command line also, if the module
is built into the kernel image.  For example, the
<literal>usbcore</literal> module accepts the paramater
<literal>blinkenlights</literal> as an option to display flashing lights
on all supported USB 2.0 hubs (don't ever say the kernel developers
don't have a sense of humor.)  Normally, when loading a module, to set
this paramater you would do:
<screen>
$ <userinput>modprobe usbcore blinkenlights=1</userinput>
</screen>
But if the <literal>usbcore</literal> module is built into the kernel,
you need to use the modulename, with a <literal>.</literal> to specify
the option:
<screen>
usbcore.blinkenlights=1
</screen>
</para>

<para>
Module options for modules that are built into the kernel are also
allowed to be changed at run time by looking in the
<filename>/sys/module/</filename> directory for the specified module
desired.
</para>

<para>
Note that not all of the listed options are always available, the
majority of them depend on a kernel configuration option that builds the
subsystem into the kernel, and also the presence of the specific
hardware.
</para>

<para>
Note that all of these paramaters are case sensitive.
</para>


<sect1>
<title>Options not requiring hardware</title>

<para>
These options should always be available, and not depend on any specific
subsystem or hardware being present in the system in order to work
properly.
</para>

<refentry>
  <refnamediv>
    <refname>apic</refname>
    <refpurpose>Change the output verbosity of the APIC subsystem when booting</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para><literal>apic=</literal>[<replaceable>quiet</replaceable>(default)|<replaceable>verbose</replaceable>|<replaceable>debug</replaceable>]</para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This option changes how verbose the APIC subsystem is when booting
	the kernel.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>cachesize</refname>
    <refpurpose>Override the level 2 CPU cache size detection by the kernel.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para><literal>cachesize=</literal><emphasis>nn</emphasis></para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	Sometimes CPU hardware bugs make them report the cache size
	incorrectly. The kernel will attempt to work around and fix known
	problems with most CPUs, but for some CPUs it is not possible to
	determine what the correct size should be.  This option provides an
	override for these situations.
	<emphasis>nn</emphasis> is measured in units of bytes.
	</para>
</refsect1>
</refentry>

<screen>
console=
	Output console device and options.

	tty[n]	Use the virtual console device [n].

	ttyS[n][,options]
	ttyUSB0[,options]
		Use the specified serial port.  The options are of
		the form "bbbbpnf", where "bbbb" is the baud rate,
		"p" is parity ("n", "o", or "e"), "n" is number of
		bits, and "f" is flow control ("r" for RTS or
		omit it).  Default is "9600n8".

		See the file
		<filename>Documentation/serial-console.txt</filename> for more
		information and the file
		<filename>Documentation/networking/netconsole.txt</filename> for an
		alternative if you do not have a serial port.

	uart,io,[addr][,options]
	uart,mmio,[addr][,options]
		Start an early, polled-mode console on the 8250/16550
		UART at the specified I/O port or MMIO address,
		switching to the matching ttyS device later.  The
		options are the same as for ttyS, above.
</screen>

<refentry>
  <refnamediv>
    <refname>crashkernel</refname>
    <refpurpose>Reserve a portion of physical memory for kexec to use</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para><literal>crashkernel=</literal><emphasis>nn</emphasis>[<replaceable>KMG</replaceable>]@<emphasis>ss</emphasis>[<replaceable>KMG</replaceable>]</para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	The kexec subsystem likes to have a portion of physical memory to
	use.  This option reserves that memory from the rest of the kernel
	and will switch to use it if the kernel panics.
	<emphasis>nn</emphasis> specifies the amount of memory to reserve
	and is measured in units of kilo, mega, or
	gigabytes.
	<emphasis>ss</emphasis> specifies the location for this memory
	chunk and is measured in units of kilo, mega, or
	gigabytes.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>debug</refname>
    <refpurpose>Enable kernel debugging.</refpurpose>
  </refnamediv>
<refsect1>
  <title>Description</title>
	<para>
	This option will enable the kernel log level to default to the
	debug level, so that all debug messages will be printed to the
	console at boot time.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>
    </refname>
    <refpurpose>
    </refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>apic=</literal>[<replaceable>quiet</replaceable>(default)|<replaceable>verbose</replaceable>|<replaceable>debug</replaceable>]
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>dhash_entries</refname>
    <refpurpose>Set the number of dentry hash buckets.
    </refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>dhash_entries=</literal><emphasis>nn</emphasis>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This option lets you override the default number of hash buckets
	for the kernel's dentry cache.  Only use this if you know what you
	are doing.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>earlyprintk</refname>
    <refpurpose>Show early boot messages
    </refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>earlyprintk=</literal>[<replaceable>vga</replaceable>|<replaceable>serial</replaceable>[,<replaceable>ttyS</replaceable><emphasis>n</emphasis>[,<emphasis>baudrate</emphasis>]]]
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This option enables the ability to see the kernel log messages that
	happen before the traditional console is initialized.  It can be
	very useful for tracking down hardware issues.  Currently only the
	VGA device or the serial port will work, not both at the same time.
	Also, only the <literal>ttyS0</literal> or <literal>ttyS1</literal>
	serial devices will work.  Interaction with the standard serial
	driver is not very good, and the VGA output will eventually be
	overwritten by the real console.
	</para>
	<para>
	Append the string <literal>,keep</literal> to not disable the
	messages when the real kernel console is initializes and takes over
	the system.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>elevator</refname>
    <refpurpose>Sets the default I/O scheduler elevator
    </refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>elevator=</literal>[<replaceable>anticipatory</replaceable>|<replaceable>cfg</replaceable>|<replaceable>deadline</replaceable>|<replaceable>noop</replaceable>]
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This sets the default I/O scheduler to be the one specified.  See
	<xref linkend="CONFIG_IOSCHED_NOOP" /> for a list of the different
	I/O schedulers available, and what they do.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>elfcorehdr
    </refname>
    <refpurpose>Specify the start of the kernel core image elf header</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>elfcorhdr=</literal><emphasis>nn</emphasis>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This will specify the physical address that the kernel core image's
	elf header is at.  This is used by kexec to find the kernel when
	booting the secondary kernel image.  <emphasis>nn</emphasis> is a
	memory location.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>hashdist</refname>
    <refpurpose>Distribute large hashes across NUMA nodes</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>hashdist=</literal>[<replaceable>0</replaceable>|<replaceable>1</replaceable>]
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	Large hashs that are allocated during the boot process are by
	default on the IA-64 platform distributed across the different NUMA
	nodes.  This option lets the user turn this option on or off.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>highmem</refname>
    <refpurpose>Specify the size of the highmem memory zone</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>highmem=</literal><emphasis>nn</emphasis>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This option will force the highmem memory zone to have an exact
	size of <emphasis>nn</emphasis> bytes.  This will work even on
	boxes that have no highmem zones by default.  It will can also
	reduce the size of the highmem zone for machines with a lot of
	memory.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>hugepages</refname>
    <refpurpose>Set the number of hugetlb pages</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>hugepages=</literal><emphasis>nn</emphasis>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	Set the maximum number of hugetlb pages to be
	<emphasis>nn</emphasis>.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>noirqbalance</refname>
    <refpurpose>Disable kernel irq balancing</refpurpose>
  </refnamediv>
<refsect1>
  <title>Description</title>
	<para>
	This option will disable all of the built in kernel irq balancing logic.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>ihash_entries</refname>
    <refpurpose>Set the number of inode hash buckets.
    </refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>ihash_entries=</literal><emphasis>nn</emphasis>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This option lets you override the default number of hash buckets
	for the kernel's inode cache.  Only use this if you know what you
	are doing.
	</para>
</refsect1>
</refentry>


<refentry>
  <refnamediv>
    <refname>init</refname>
    <refpurpose>Set the program to run at init time</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>init=</literal><emphasis>filename</emphasis>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	Run the specified binary as the init process instead of the default
	<filename>/sbin/init</filename> program.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>initcall_debug</refname>
    <refpurpose>Debug the initcall functions in the kernel</refpurpose>
  </refnamediv>
<refsect1>
  <title>Description</title>
	<para>
	This option causes the kernel to trace all initcalls as they are
	executed during the boot process.  It is useful for working out
	where the kernel is dying during startup.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>initrd</refname>
    <refpurpose>Specify where the initial ramdisk is located</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>initrd=</literal><emphasis>filename</emphasis>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This option specifies where the initial ramdisk for the kernel boot
	is located.  Please see <xref linkend="LKN-initramfs" /> for more
	information about kernel ramdisks.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>combined_mode</refname>
    <refpurpose>Specify IDE driver usage</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>combined_mode=</literal>[<replaceable>combined</replaceable>|<replaceable>ide</replaceable>|<replaceable>libata</replaceable>]
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This option controls which driver use the IDE ports in combined
	mode: the legacy IDE driver, libata, or both.  Note that using the
	ide or libata options may affect your device naming (e.g. by
	changing hdc to sdb).
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>irqfixup</refname>
    <refpurpose>Fix IRQ issues</refpurpose>
  </refnamediv>
<refsect1>
  <title>Description</title>
	<para>
	When an interrupt is not handled, search all known interrupt
	handlers for it.  This is Intended to get systems with badly broken
	firmware running.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>irqpoll</refname>
    <refpurpose>Fix IRQ issues</refpurpose>
  </refnamediv>
<refsect1>
  <title>Description</title>
	<para>
	When an interrupt is not handled search all known interrupt
	handlers for it and also check all handlers each timer interrupt.
	This is intended to get systems with badly broken firmware running.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>isolcpus</refname>
    <refpurpose>Isolate CPUs from the kernel scheduler</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>isolcpus=</literal>[<emphasis>cpu_number</emphasis>]<literal>,</literal>...<literal>,</literal>[<emphasis>cpu_number</emphasis>]
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This is used to remove the specified cpus, as defined by the
	<emphasis>cpu_number</emphasis> values, from the general kernel
	SMP balancing and scheduler algroithms.  The only way to move a
	process onto or off an "isolated" CPU is via the CPU affinity syscalls.
	<emphasis>cpu_number</emphasis> begins at <literal>0</literal> and
	the maximum value is "number of CPUs in system - 1".
	</para>
	<para>
	This option is the preferred way to isolate CPUs.  The alternative,
	manually setting the CPU mask of all tasks in the system, can cause
	problems and suboptimal load balancer performance.
	</para>
</refsect1>
</refentry>


<refentry>
  <refnamediv>
    <refname>kstack</refname>
    <refpurpose>How many words of the stack to print in kernel oopses</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>kstack=</literal><emphasis>nn</emphasis>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This specifies how many words from the kernel stack should be
	printed in the kernel oops dumps.  <emphasis>nn</emphasis> is an
	integer value.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>lapic</refname>
    <refpurpose>Enable the local APIC</refpurpose>
  </refnamediv>
<refsect1>
  <title>Description</title>
	<para>
	This option will cause the kernel to enable the local APIC even if
	the BIOS had disabled it.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>load_ramdisk</refname>
    <refpurpose>Load a kernel ramdisk from a floppy</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>load_ramdisk=</literal><emphasis>nn</emphasis>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	If <emphasis>nn</emphasis> is set to <literal>1</literal> than a
	ramdisk will be loaded by the kernel at boot time from the floppy
	drive.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>loglevel</refname>
    <refpurpose>Set the default console log level</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>loglevel=</literal><emphasis>level</emphasis>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This option specifies the initial console log level.  Any log
	messages smaller than the default value will be printed to the
	console and any equal or greater than will not be displayed.
	</para>
	<para>
	The console log level can also be changed by the klogd program, or
	by writing the specified level to the
	<filename>/proc/sys/kernel/printk</filename> file.
	</para>
	<para>
	The kernel log levels are defined as:
	<variablelist>

	<varlistentry>
	<term><literal>0 (KERN_EMERG)</literal></term>
	<listitem>
	<para>The system is unusable.</para>
	</listitem>
	</varlistentry>

	<varlistentry>
	<term><literal>1 (KERN_ALERT)</literal></term>
	<listitem>
	<para>This is for actions that must be taken care of immediately.</para>
	</listitem>
	</varlistentry>

	<varlistentry>
	<term><literal>2 (KERN_CRIT)</literal></term>
	<listitem>
	<para>This is for critical conditions.</para>
	</listitem>
	</varlistentry>

	<varlistentry>
	<term><literal>3 (KERN_ERR)</literal></term>
	<listitem>
	<para>This is for error conditions that have happend to the system.</para>
	</listitem>
	</varlistentry>

	<varlistentry>
	<term><literal>4 (KERN_WARNING)</literal></term>
	<listitem>
	<para>This is for warning conditions that should be taken care of.</para>
	</listitem>
	</varlistentry>

	<varlistentry>
	<term><literal>5 (KERN_NOTICE)</literal></term>
	<listitem>
	<para>This is for normal, but significant conditions that might
	happen.</para>
	</listitem>
	</varlistentry>

	<varlistentry>
	<term><literal>6 (KERN_INFO)</literal></term>
	<listitem>
	<para>Informational messages are printed here.</para>
	</listitem>
	</varlistentry>

	<varlistentry>
	<term><literal>7 (KERN_DEBUG)</literal></term>
	<listitem>
	<para>This is for kernel debugging messages.</para>
	</listitem>
	</varlistentry>

	</variablelist>
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>log_buf_len</refname>
    <refpurpose>Set the size of the kernel log buffer</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>log_buf_len=</literal><emphasis>nn</emphasis>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This sets the size of the kernel's internal log buffer.
	<emphasis>nn</emphasis> is in bytes and must be a power of two.
	This value can also be changed by a kernel configuration value.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>lpj</refname>
    <refpurpose>Set the loops per jiffy</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>lpg=</literal><emphasis>nn</emphasis>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This specifies the loops per jiffy that should be used by the
	kernel and thus have the kernel avoid the time-consuming boot time
	autodetection of this value.  If <emphasis>nn</emphasis> is
	<literal>0</literal> then the value will be autodetected like
	normal.
	</para>
	<para>
	Note that on SMP systems, this value will be set to all CPUs, which
	might cause problems if the different CPUs need different settings.
	An incorrect value will cause delays in the kernel to be wrong
	which can lead to unpredictable I/O errors and other breakage.
	Although unlikely, in the extreme case this might damage your
	hardware.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>max_loop</refname>
    <refpurpose>Maximum number of loopback devices</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>max_loop=</literal><emphasis>nn</emphasis>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This specifies the maximum number of loopback filesystem devices
	that can be mounted at the same time.  <emphasis>nn</emphasis> is a
	number between 1 and 256.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>max_cpus</refname>
    <refpurpose>Maximum number of CPUs to use</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>maxcpus=</literal><emphasis>nn</emphasis>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This specifies the maximum number of processors that a SMP kernel
	should use even if there are more processors present in the system.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>max_addr</refname>
    <refpurpose>Ignore memory</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>max_addr=</literal><emphasis>nn</emphasis>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	All physical memory greater than or equal to the physical address
	<emphasis>nn</emphasis> is to be ignored by the kernel.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>mem</refname>
    <refpurpose>Force memory usage</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>mem=</literal><emphasis>nn</emphasis>[<replaceable>KMG</replaceable>]
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This option forces the specific ammount of memory to be used by the
	kernel.  When used with the <literal>memmap=</literal> option,
	physical address space collisions can be avoided.  Without the
	<literal>memmap=</literal> option, this option could cause PCI
	devices to be placed at addresses that belong to unused RAM.
	<emphasis>nn</emphasis> specifies the amount of memory to force and
	is measured in units of kilo, mega, or gigabytes.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>mem</refname>
    <refpurpose>Disable the usage of 4Mb pages for kernel memory</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>mem=nopentium</literal>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This option will disable the use of 4Mb pages for kernel memory.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>memmap</refname>
    <refpurpose>Enable setting of an exact E820 memory map</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>memmap=</literal><emphasis>exactmap</emphasis>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This lets the user to specify an exact memory map that the kernel
	should use.  These <emphasis>exactmap</emphasis> lines can be
	constructed based on BIOS output or other requirements.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>memmap</refname>
    <refpurpose>Force specific memory to be used</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>memmap=</literal><emphasis>nn</emphasis>[<replaceable>KMG</replaceable>]<literal>@</literal><emphasis>ss</emphasis>[<replaceable>KMG</replaceable>]
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This forces the kernel to use a specific memory region.
	<emphasis>nn</emphasis> is the size of the memory location and
	<emphasis>ss</emphasis>is the start location in memory of the
	range.
	</para>
</refsect1>
</refentry>

<screen>

migration_cost=
	debug: override scheduler migration costs
	Format: [level-1-usecs],[level-2-usecs],...
	This debugging option can be used to override the default scheduler
	migration cost matrix. The numbers are indexed by 'CPU domain
	distance'.
	E.g. migration_cost=1000,2000,3000 on an SMT NUMA box will set up an
	intra-core migration cost of 1 msec, an inter-core migration cost of 2
	msecs, and an inter-node migration cost of 3 msecs.

	WARNING: using the wrong values here can break scheduler performance,
	so it's only for scheduler development purposes, not production
	environments.

migration_debug=
	migration cost auto-detect verbosity
	Format=[0|1|2]
	If a system's migration matrix reported at bootup seems erroneous then
	this option can be used to increase verbosity of the detection process.
	We default to 0 (no extra messages), 1 will print some more
	information, and 2 will be really verbose (probably only useful if you
	also have a serial console attached to the system).

migration_factor=
	multiply/divide migration costs by a factor
	Format=[percent]
	This debug option can be used to proportionally increase or decrease
	the auto-detected migration costs for all entries of the migration
	matrix.  E.g. migration_factor=150 will increase migration costs by
	50%. (and thus the scheduler will be less eager migrating cache-hot
	tasks) migration_factor=80 will decrease migration costs by 20%. (thus
	the scheduler will be more eager to migrate tasks)

	WARNING: using the wrong values here can break scheduler performance,
	so it's only for scheduler development purposes, not production
	environments.

nmi_watchdog=
	Debugging features for SMP kernels

no387
	Tells the kernel to use the 387 maths emulation library even if a 387
	maths coprocessor is present.

noapic
	Tells the kernel to not make use of any IOAPICs that may be present in
	the system.

noexec
	noexec=on: enable non-executable mappings (default)
	noexec=off: disable nn-executable mappings

nofxsr
	Disables x86 floating point extended register save and restore. The
	kernel will only save legacy floating-point registers on task switch.

no-hlt
	Tells the kernel that the hlt instruction doesn't work correctly and
	not to use it.

noirqdebug
	Disables the code which attempts to detect and disable unhandled
	interrupt sources.

noisapnp
	Disables ISA PnP code.

noinitrd
	Tells the kernel not to load any configured initial RAM disk.

nolapic
	Do not enable or use the local APIC.

nomce
	Machine Check Exception

noresume
	Disables resume and restores original swap space.

nosep
	Disables x86 SYSENTER/SYSEXIT support.

nosmp
	Tells an SMP kernel to act as a UP kernel.

notsc
	Disable Time Stamp Counter

panic=
	Kernel behaviour on panic
	Format: [timeout]

pause_on_oops=
	Halt all CPUs after the first oops has been printed for the specified
	number of seconds.  This is to be used if your oopses keep scrolling
	off the screen.

pnpbios=
	{ on | off | curr | res | no-curr | no-res }

pnp_reserve_irq=
	Exclude IRQs for the autoconfiguration

pnp_reserve_dma=
	Exclude DMAs for the autoconfiguration

pnp_reserve_io=
	Exclude I/O ports for the autoconfiguration Ranges are in pairs (I/O
	port base and size).

pnp_reserve_mem=
	Exclude memory regions for the autoconfiguration.
	Ranges are in pairs (memory base and size).

profile=
	Enable kernel profiling via /proc/profile
	Format: [schedule,][number]
	Param: "schedule" - profile schedule points.
	Param: [number] - step/bucket size as a power of 2 for statistical time based profiling.

prompt_ramdisk=
	List of RAM disks to prompt for floppy disk before loading.
	See Documentation/ramdisk.txt.

quiet=
	Disable log messages

ramdisk=
	Sizes of RAM disks in kilobytes [deprecated]
	See Documentation/ramdisk.txt.

ramdisk_blocksize=
	See Documentation/ramdisk.txt.

ramdisk_size=
	Sizes of RAM disks in kilobytes
	New name for the ramdisk parameter.
	See Documentation/ramdisk.txt.

rcu.blimit=
	Set maximum number of finished RCU callbacks to process in one batch.

rcu.qhimark=
	Set threshold of queued RCU callbacks over which batch limiting is
	disabled.

rcu.qlowmark=
	Set threshold of queued RCU callbacks below which batch limiting is
	re-enabled.

rcu.rsinterval=
	Set the number of additional RCU callbacks to queued before forcing
	reschedule on all cpus.

rdinit=
	Format: [full_path]
	Run specified binary instead of /init from the ramdisk,
	used for early userspace startup. See initrd.

reserve=
	Force the kernel to ignore some iomem area

resume=
	Specify the partition device for software suspend

ro
	Mount root device read-only on boot

root=
	Root filesystem

rootdelay=
	Delay (in seconds) to pause before attempting to mount the root
	filesystem

rootflags=
	Set root filesystem mount option string

rootfstype=
	Set root filesystem type

</screen>

<refentry>
  <refnamediv>
    <refname>rw</refname>
    <refpurpose>Mount the root device read-write on boot</refpurpose>
  </refnamediv>
<refsect1>
  <title>Description</title>
	<para>
	The default for the kernel is to mount the root device as read only
	at boot time.  This option changes this to mount the root device as
	read-write instead.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>S</refname>
    <refpurpose>Run init in single mode</refpurpose>
  </refnamediv>
<refsect1>
  <title>Description</title>
	<para>
	The default for the kernel is to run init in multi-user mode.  This
	option changes this to have init run in single mode only.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>time</refname>
    <refpurpose>Show timing data on every kernel log message</refpurpose>
  </refnamediv>
<refsect1>
  <title>Description</title>
	<para>
	This option causes the kernel to prefix every kernel log message
	with a timestamp.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>vdso</refname>
    <refpurpose>Enable or disable the VDSO mapping</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>vdso=</literal>[<replaceable>0</replaceable>|<replaceable>1</replaceable>]
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This enables or disables the VDSO mapping option.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>vmalloc</refname>
    <refpurpose>Force the vmalloc area to have a specific size</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>vmalloc=</literal><emphasis>nn</emphasis>[<replaceable>KMG</replaceable>]
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This option forces the vmalloc to have the exact size specified by
	<emphasis>nn</emphasis>.  This can be used to increase the minimum
	size of the vmalloc area (which is 128Mb on the x86 processor).  It
	can also be used to decrease the size and leave more room for
	directly mapped kernel RAM.  <emphasis>nn</emphasis> specifies the
	amount of memory and is measured in units of kilo, mega, or
	gigabytes.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>norandmaps</refname>
    <refpurpose>Do not use the address space randomization</refpurpose>
  </refnamediv>
<refsect1>
  <title>Description</title>
	<para>
	By default the kernel randomizes the address space of all programs
	when they are started.  This option will disable this feature.  It
	is also equivalent to writing a <literal>0</literal> to the file
	<filename>/proc/sys/kernel/randomize_va_space</filename>.
	</para>
</refsect1>
</refentry>

</sect1>

<sect1>
<title>ACPI options</title>

<para>
These options specify different paramaters the ACPI subsystem can use.
</para>

<refentry>
  <refnamediv>
    <refname>acpi</refname>
    <refpurpose>ACPI subsystem options</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>acpi=</literal>[<replaceable>force</replaceable>|<replaceable>off</replaceable>|<replaceable>noirq</replaceable>|<replaceable>ht</replaceable>|<replaceable>strict</replaceable>]
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This is the main option for the Advanced Configuration and Power
	Interface (ACPI).
	</para>
	<para>
	<literal>acpi=force</literal> forces ACPI to be enabled if the
	kernel configuration option had it disabled.
	</para>
	<para>
	<literal>acpi=off</literal> disables ACPI if the kernel
	configuration option had it enabled.
	</para>
	<para>
	<literal>acpi=noirq</literal> does not use ACPI for IRQ routing
	</para>
	<para>
	<literal>acpi=ht</literal> only runs enough of the ACPI layer in
	order to enable HyperThreading on processors that are capable of
	it.
	</para>
	<para>
	<literal>acpi=strict</literal> makes the ACPI layer be less
	tolerant of platforms that are not fully compiant with the ACPI
	specification.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>acpi_sleep</refname>
    <refpurpose>ACPI sleep options</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>acpi_sleep=</literal>[<replaceable>s3_bios</replaceable>]<literal>,</literal>[<replaceable>s3_mode</replaceable>]
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	During S3 resume (this happens when the machine has been suspended
	to RAM), hardware needs to be reinitialized properly.  For most
	devices, this is simple, except for video cards, which are normally
	initialized by the BIOS.  The kernel does not have enough
	information to restore the video device, as that information is in
	the BIOS and not accessable at all.  This option lets the kernel
	try to use the ACPI subsystem to restore the video card in
	two different ways.
	</para>
	<para>
	See the file <filename>Documentation/power/video.txt</filename> for
	more information on this option and how to find the proper value
	for your type of hardware.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>acpi_sci</refname>
    <refpurpose>ACPI System Control Interrupt trigger mode</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>acpi_sci=</literal>[<replaceable>level</replaceable>|<replaceable>edge</replaceable>|<replaceable>high</replaceable>|<replaceable>low</replaceable>]
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This sets the ACPI System Control Interrupt trigger mode.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>acpi_irq_balance</refname>
    <refpurpose>Enable ACPI IRQ balance</refpurpose>
  </refnamediv>
<refsect1>
  <title>Description</title>
	<para>
	ACPI will balance the active IRQs if this option is present.  This
	is the default option when operating in APIC mode.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>acpi_irq_nobalance</refname>
    <refpurpose>Disable ACPI IRQ balance</refpurpose>
  </refnamediv>
<refsect1>
  <title>Description</title>
	<para>
	ACPI will not move the active IRQs if this option is present.  This
	is the default option when operating in PIC mode.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>acpi_irq_isa</refname>
    <refpurpose>Mark the listed IRQs as used by ISA</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>acpi_irq_isa=</literal>[<replaceable>irq</replaceable>]<literal>,</literal>[<replaceable>irq</replaceable>]...
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	If the IRQ balance option is enabled, mark the listed IRQs as used
	by the ISA subsystem.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>acpi_irq_pci</refname>
    <refpurpose>Mark the listed IRQs as used by PCI</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>acpi_irq_pci=</literal>[<replaceable>irq</replaceable>]<literal>,</literal>[<replaceable>irq</replaceable>]...
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	If the IRQ balance option is enabled, mark the listed IRQs as used
	by the PCI subsystem.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>acpi_os_name</refname>
    <refpurpose>Fake the operating system name to ACPI</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>acpi_os_name=</literal><emphasis>name</emphasis>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This tells the ACPI BIOS that the name of the running operating
	system is <emphasis>name</emphasis>.  This can be useful to spoof
	the BIOS into thinking that Windows is running instead of Linux,
	which can help solve some ACPI issues for older BIOSes.  As an
	example, use the string <literal>Microsoft 2001</literal> to
	spoof the BIOS into thinking that Windows 2001 is running on the
	machine.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>acpi_osi</refname>
    <refpurpose>Disable the _OSI ACPI method</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>acpi_osi=</literal><emphasis>nn</emphasis>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	If <emphasis>nn</emphasis> is not present, ACPI will disable the
	_OSI method.  If the paramater is present, _OSI will not be
	disabled.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>acpi_serialize</refname>
    <refpurpose>Force serialization of AML methods</refpurpose>
  </refnamediv>
<refsect1>
  <title>Description</title>
	<para>
	If present, this option forces the serialization of ACPI AML
	methods.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>acpi_skip_timer_override</refname>
    <refpurpose>Skip interrupt override issues</refpurpose>
  </refnamediv>
<refsect1>
  <title>Description</title>
	<para>
	This option allows the ACPI layer to recognize and ignore IRQ0/pin2
	Interrupt Override issues for broken nForce2 BIOSes that result in
	the XT-PIC timer acting up.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>acpi_dbg_layer</refname>
    <refpurpose>ACPI debug layer</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>acpi_dbg_layer=</literal><emphasis>nn</emphasis>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This allows the ACPI debug layer to be set at boot time.
	<emphasis>nn</emphasis> is an integer with every bit indicating a
	different ACPI debug layer.  After the system has booted up, it can
	be set via the <filename>/proc/acpi/debug_layer</filename> file.
	</para>
</refsect1>
</refentry>


<refentry>
  <refnamediv>
    <refname>acpi_fake_ecdt</refname>
    <refpurpose>ECDT workaround</refpurpose>
  </refnamediv>
<refsect1>
  <title>Description</title>
	<para>
	If present, this allows ACPI to workaround BIOS failures when they
	lack ECDT.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>acpi_generic_hotkey</refname>
    <refpurpose>ACPI generic hotkey driver override</refpurpose>
  </refnamediv>
<refsect1>
  <title>Description</title>
	<para>
	This allows the ACPI consolidated generic hotkey driver to override
	the platform specific driver if present.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>acpi_pm_good</refname>
    <refpurpose>Override the pmtimer bug detection</refpurpose>
  </refnamediv>
<refsect1>
  <title>Description</title>
	<para>
	If used, this forces the kernel to assume that the machine's
	pmtimer latches its value and always returns good values.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>ec_intr</refname>
    <refpurpose>ACPI Embedded Controller interrupt mode</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>ec_intr=</literal><emphasis>nn</emphasis>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This specifies the ACPI embedded controller interrupt mode.
	If <emphasis>nn</emphasis> is <literal>0</literal>, then polling
	mode will be used, otherwise interrupt mode will be used.  The
	interrupt mode is the default mode.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>memmap</refname>
    <refpurpose>Mark specific memory as ACPI data</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>memmap=</literal><emphasis>nn</emphasis>[<replaceable>KMG</replaceable>]<literal>#</literal><emphasis>ss</emphasis>[<replaceable>KMG</replaceable>]
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This marks a specific location and range of memory as ACPI data.
	<emphasis>nn</emphasis> is the size of the memory location and
	<emphasis>ss</emphasis>is the start location in memory of the
	range.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>memmap</refname>
    <refpurpose>Mark specific memory as reserved</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>memmap=</literal><emphasis>nn</emphasis>[<replaceable>KMG</replaceable>]<literal>$</literal><emphasis>ss</emphasis>[<replaceable>KMG</replaceable>]
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This marks a specific location and range of memory as reserved.
	<emphasis>nn</emphasis> is the size of the memory location and
	<emphasis>ss</emphasis>is the start location in memory of the
	range.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>pnpacpi</refname>
    <refpurpose>Turns PnP ACPI off</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>pnpacpic=off</literal>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	If specified, the PnP ACPI functionality will be disabled.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>processor.max_cstate</refname>
    <refpurpose>Limit the processor to a maximum C-state</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>processor.max_cstate=</literal><emphasis>nn</emphasis>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This option limits the processor to a maximum C-state, no matter
	what the ACPI tables say it can support.  <emphasis>nn</emphasis>
	is a valid C-state value.  If this is set to <literal>9</literal>
	it will override any DMI blacklist limit that might be present for
	this processor.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>processor.nocst</refname>
    <refpurpose>Ignore the _CST method for C-states</refpurpose>
  </refnamediv>
<refsect1>
  <title>Description</title>
	<para>
	If this option is specified, the ACPI core will ignore the _CST
	method of determining the processor C-states and use the legacy
	FADT method instead.
	</para>
</refsect1>
</refentry>

</sect1>

<sect1>
<title>SCSI options</title>

<para>
These options specify different paramaters the SCSI subsystem can use.
There are a number of SCSI driver specific options that are also
availble, please see the different driver documentation files in the
kernel directory, <filename>Documentation/scsi/</filename> for details
on these.
</para>

<refentry>
  <refnamediv>
    <refname>max_luns</refname>
    <refpurpose>The maximum number of SCSI LUNS to probe</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>max_luns=</literal><emphasis>nn</emphasis>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	Specifies the maximum number of SCSI LUNS that the system should
	probe.  <emphasis>nn</emphasis> is a number between 1 and
	4294967295.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>max_report_luns</refname>
    <refpurpose>The maximum number of SCSI LUNS received</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>max_report_luns=</literal><emphasis>nn</emphasis>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	Specifies the maximum number of SCSI LUNs that the system can
	receive.  <emphasis>nn</emphasis> is a number between 1 and 16384.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>scsi_dev_flags</refname>
    <refpurpose>SCSI black/white list</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>scsi_dev_flags=</literal><emphasis>vendor</emphasis><literal>:</literal><emphasis>model</emphasis><literal>:</literal><emphasis>flags</emphasis>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This option lets the user add entries to the SCSI black/white list
	for a specific vendor and model of device.
	</para>
</refsect1>
</refentry>

</sect1>


<sect1>
<title>PCI options</title>

<para>
These options specify different paramaters the PCI subsystem can use.
</para>


<screen>

pci=option[,option...]
	These are all various PCI subsystem options:

	off
		Do not probe for the PCI bus.

	bios
		Force the use of the PCI BIOS by not accessing the hardware
		directly.  This means that the kernel should trust the BIOS,
		which is not the standard thing to do (as BIOSes are known to
		lie more than they are known to be valid.)  Use this only if
		your machine has a non-standard PCI host bridge and the normal
		boot method is not working properly.

	nobios
		Do not use the PCI BIOS but rather access the hardware directly
		instead.  This is the default method of probing for PCI devices
		in all kernels after 2.6.13.

	conf1
		Force use of PCI Configuration Mechanism 1 (a way to access PCI
		memory on i386 machines.)

	conf2
		Force use of PCI Configuration Mechanism 2 (a way to access PCI
		memory on i386 machines.)

	nommconf
		Disable use of the ACPI MMCONFIG table for PCI configuration.

	nomsi
		If the PCI_MSI kernel config parameter is enabled, this kernel
		boot option can be used to disable the use of MSI interrupts
		system-wide.

	nosort
		Do not sort PCI devices according to order given by the PCI
		BIOS. This sorting is done to get a device order compatible
		with much older kernel versions.

	biosirq
		Use PCI BIOS calls to get the interrupt routing table. These
		calls are known to be buggy on several machines and they hang
		the machine when used, but on other computers it's the only way
		to get the interrupt routing table. Try this option if the
		kernel is unable to allocate IRQs or discover secondary PCI
		buses on your motherboard.

	rom
		Assign address space to expansion ROMs.  Use this with caution
		as certain devices share address decoders between ROMs and
		other resources.

	irqmask=0xMMMM
		Set a bit mask of IRQs allowed to be assigned automatically to
		PCI devices. You can make the kernel exclude IRQs of your ISA
		cards this way.

	pirqaddr=0xAAAAA
		Specify the physical address of the PIRQ table (normally
		generated by the BIOS) if it is outside the F0000h-100000h
		range.

	lastbus=N
		Scan all buses thru bus #N. Can be useful if the kernel is
		unable to find your secondary buses and you want to tell it
		explicitly which ones they are.

	assign-busses
		Always assign all PCI bus numbers ourselves, overriding
		whatever the firmware may have done.

	usepirqmask
		Honor the possible IRQ mask stored in the BIOS $PIR table. This
		is needed on some systems with broken BIOSes, notably some HP
		Pavilion N5400 and Omnibook XE3 notebooks. This will have no
		effect if ACPI IRQ routing is enabled.

	noacpi
		Do not use ACPI for IRQ routing or for PCI scanning.

	routeirq
		Do IRQ routing for all PCI devices.  This is normally done in
		<literal>pci_enable_device()</literal>, so this option is a
		temporary workaround for broken drivers that don't call it.

	firmware
		Do not re-enumerate the bus but instead just use the
		configuration from the bootloader. This is currently used on
		IXP2000 systems where the bus has to be configured a certain
		way for adjunct CPUs.


</screen>
</sect1>


<sect1>
<title>SELinux options</title>

<para>
These options specify different paramaters the SELinux subsystem can use.
</para>

<refentry>
  <refnamediv>
    <refname>checkreqprot</refname>
    <refpurpose>Set the initial checkreqprot flag value</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>checkreqprot=</literal>[<replaceable>0</replaceable>|<replaceable>1</replaceable>]
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	Sets the initial checkreqprot flag value.  <emphasis>0</emphasis>
	means that the check protection will be applied by the kernel and
	will include any implied execute protection.
	<emphasis>1</emphasis> means that the check protection is requested
	by the application.  The default value is set by a kernel
	configuration option.
	</para>
	<para>
	The value can be changed at runtime via the
	<filename>/selinux/checkreqprot</filename> file.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>enforcing</refname>
    <refpurpose>Set the initial enforcing status</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>enforcing=</literal>[<replaceable>0</replaceable>|<replaceable>1</replaceable>]
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	Sets the initial SELinux enforcing status.  <emphasis>0</emphasis>
	means that the enforcement will be permissive with only logging
	issues and no denials.  <emphasis>1</emphasis> means that the
	enforcement will be fully enabled with denying and logging.  The
	default value is <emphasis>0</emphasis>.
	</para>
	<para>
	The value can be changed at runtime via the
	<filename>/selinux/enforce</filename> file.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>selinux</refname>
    <refpurpose>Enable or disable SELinux at boot time</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>selinux=</literal>[<replaceable>0</replaceable>|<replaceable>1</replaceable>]
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This allows SELinux to be enabled or disabled to boot time.
	<emphasis>0</emphasis> is to disable, and <emphasis>1</emphasis> is
	to enable it.  The default value is set by a kernel configuration
	option at boot time.
	</para>
	<para>
	If SELinux is enabled at boot time, the
	<filename>/selinux/disable</filename> file can be used later to
	disable prior to the initial policy load.
	</para>
</refsect1>
</refentry>


<refentry>
  <refnamediv>
    <refname>selinux_compat_net</refname>
    <refpurpose>Sets the initial <literal>selinux_compat_net</literal> value</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>selinux_compat_net=</literal>[<replaceable>0</replaceable>|<replaceable>1</replaceable>]
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	Sets the initial value for the
	<literal>selinux_compat_net</literal> option.
	<emphasis>0</emphasis> means to use the new secmark-based packet
	controls, and <emphasis>1</emphasis> means to use the legacy packet
	controls.
	</para>
	<para>
	<emphasis>0</emphasis> is the default and preferred value.  This
	value can be changed at runtime via the
	<filename>/selinux/compat_net</filename> file.
	</para>
</refsect1>
</refentry>


</sect1>

<sect1>
<title>Network options</title>

<para>
These options specify different paramaters the Networking subsystem can use.
</para>

<refentry>
  <refnamediv>
    <refname>netdev</refname>
    <refpurpose>Set different network device paramaters.
    </refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <emphasis><literal>netdev</literal></emphasis><literal>=</literal>[<replaceable>irq</replaceable>],[<replaceable>io</replaceable>],[<replaceable>mem_start</replaceable>],[<replaceable>mem_end</replaceable>],[<replaceable>name</replaceable>]
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	Specify different network device parameters.  Note that each of these
	paramaters are specific to the different driver used by the network
	device.  These options might be documented in the different driver
	source files.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>rhash_entries</refname>
    <refpurpose>Set the number of route cache hash buckets.
    </refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>dhash_entries=</literal><emphasis>nn</emphasis>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This option lets you override the default number of hash buckets
	for the kernel's route cache.  Only use this if you know what you
	are doing.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>shapers</refname>
    <refpurpose>Set the maximum number of network shapers.
    </refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>shapers=</literal><emphasis>nn</emphasis>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This option lets you set the maximum number of network shapers that are
	possible to be used by the kernel.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>thash_entries</refname>
    <refpurpose>Set the number of TCP connection hash buckets.
    </refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>thash_entries=</literal><emphasis>nn</emphasis>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This option lets you override the default number of hash buckets for
	the kernel's TCP connection cache.  Only use this if you know what you
	are doing.
	</para>
</refsect1>
</refentry>

</sect1>


<sect1>
<title>NFS options</title>

<para>
These options specify different paramaters the NFS subsystem can use.
</para>

<refentry>
  <refnamediv>
    <refname>lockd.nlm_grace_period</refname>
    <refpurpose>Assign a grace period to the lock manager</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>lockd.nlm_grace_period=</literal><emphasis>nn</emphasis>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	Sets the NFS lock manager grace period.  <emphasis>nn</emphasis> is
	in seconds.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>lockd.nlm_tcpport</refname>
    <refpurpose>Assign a TCP port to the lock manager</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>lockd.nlm_tcpport=</literal><emphasis>port</emphasis>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	Set the TCP port that the NFS lock manager should use.
	<emphasis>port</emphasis> must be a valid TCP port value.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>lockd.nlm_timeout</refname>
    <refpurpose>Assign a new timeout value to the lock manager</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>lockd.nlm_timeout=</literal><emphasis>nn</emphasis>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	Overrides the default time value for the NFS lock manager.
	<emphasis>nn</emphasis> is in seconds.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>lockd.nlm_udpport</refname>
    <refpurpose>Assign a UDP port to the lock manager</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>lockd.nlm_udpport=</literal><emphasis>port</emphasis>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	Set the UDP port that the NFS lock manager should use.
	<emphasis>port</emphasis> must be a valid UDP port value.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>nfsroot</refname>
    <refpurpose>Specifies the NFS root filesystem</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>nfsroot=</literal>[<emphasis>server-ip</emphasis><literal>:</literal>]<emphasis>root-dir</emphasis>[,<emphasis>nfs-options</emphasis>]
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This option sets the NFS root filesystem for diskless boxes, to
	enable them to boot properly over NFS.  If this option is not given
	on the command line, the default will be
	<literal>/tftpboot/</literal><emphasis>client_ip_address</emphasis>
	will be used.
	</para>
	<para>
	<emphasis>server-ip</emphasis> specifies the IP address of the NFS
	server to connect to.
	</para>
	<para>
	<emphasis>root-dir</emphasis> specifies the directory on the NFS
	server to mount as root.  If there is a <literal>%s</literal> token
	in this string, it will be replaced with the ASCII representation
	of the client's IP address.
	</para>
	<para>
	<emphasis>nfs-options</emphasis> are the standard NFS options,
	separated by commas.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>nfs.callback_tcpport</refname>
    <refpurpose>Set the NFSv4 TCP port for the callback channel.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>nfs.callback_tcpport=</literal><emphasis>port</emphasis>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	Specifies the TCP port that the NFSv4 callback channel should
	listen on.  <emphasis>port</emphasis> must be a valid TCP port
	value.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>nfs.idmap_cache_timeout</refname>
    <refpurpose>Set the maximum lifetime for idmapper cache entries</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>nfs.idmap_cache_timeout=</literal><emphasis>nn</emphasis>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	Specifies the maximum lifetime for the idmapper cache entries.
	<emphasis>nn</emphasis> is in seconds.
	</para>
</refsect1>
</refentry>

</sect1>


<sect1>
<title>Hardware specific options</title>

<para>
These options specify different paramaters the depending on the hardware
you have present in the system.
</para>

<refentry>
  <refnamediv>
    <refname>nousb</refname>
    <refpurpose>Disable the USB subsystem</refpurpose>
  </refnamediv>
<refsect1>
  <title>Description</title>
	<para>
	If this option is present, the USB subsystem will not be initialized.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>lp</refname>
    <refpurpose>Specify the parallel port to use and the mode of it.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>lp=</literal>[<replaceable>0</replaceable>|<replaceable>port</replaceable>[,<replaceable>port</replaceable>...]|<replaceable>reset</replaceable>|<replaceable>auto</replaceable>]
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	Specify the parallel port to use.  An example of this would be
	<literal>lp=none,parport0</literal> which would not configure
	the <literal>lp0</literal> device, and the <literal>lp1</literal>
	device would use the first parallel port.
	</para>
	<para>
	If using the format, <literal>lp=port1,port2...</literal> the
	specified parallel ports would be associated with the different
	devices, starting with <literal>lp0</literal>.
	</para>
	<para>
	<literal>lp=0</literal> disables the printer driver.
	</para>
	<para>
	<literal>lp=reset</literal> causes the attached printers to be
	reset.  This option can be combined with the port specifications.
	</para>
	<para>
	<literal>lp=auto</literal> instead of a port specification list
	causes the device ids from each port will be examined by the kernel
	to determine if a IEEE 1284-compatible printer is attached.  If so,
	the kernel will manage that printer.
	</para>

</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>parport</refname>
    <refpurpose>Specify the parallel port parameters</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>parport=</literal>[<replaceable>0</replaceable>|<replaceable>auto</replaceable>|<replaceable>0x</replaceable><emphasis>BBBB</emphasis>[,<emphasis>IRQ</emphasis>[,<emphasis>DMA</emphasis>]]]
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This sets the parallel port driver to use these specific settings
	instead of any others.  Use <literal>auto</literal> to force the
	driver to use any IRQ/DMA settings detected (the default is to
	ignore detected IRQ/DMA settings because of possible conflicts).
	You can specify the base address, IRQ, and DMA settings;
	IRQ and DMA should be numbers, or <literal>auto</literal> (for
	using detected settings on that particular port), or
	<literal>nofifo</literal> (to avoid using a FIFO even if it is
	detected).  Parallel ports are assigned in the order they are
	specified on the command line, starting with
	<literal>parport0</literal>.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>parport_init_mode</refname>
    <refpurpose>Configure the parallel port initialization mode</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>parport_init_mode=</literal>[<replaceable>spp</replaceable>|<replaceable>ps2</replaceable>|<replaceable>epp</replaceable>|<replaceable>ecp</replaceable>|<replaceable>ecpepp</replaceable>]
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	Specifies the mode that the parallel port should be operated in.
	This is necessary on the Pegasos computer where the firmware has no
	options for setting up the parallel port mode.  This function works
	for parallel port chips of type 686a and 8231.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>nr_uarts</refname>
    <refpurpose>Maximum number of UARTs to be registered</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>nr_uarts=</literal><emphasis>nn</emphasis>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	Specifies the maximum number of different UARTs that can be
	registered in the kernel.
	</para>
</refsect1>
</refentry>

</sect1>


<sect1>
<title>Timer specific options</title>

<para>
These options specify different paramaters for the timer.
</para>


<refentry>
  <refnamediv>
    <refname>enable_timer_pin_1</refname>
    <refpurpose>Enable pin 1 of the APIC timer</refpurpose>
  </refnamediv>
<refsect1>
  <title>Description</title>
	<para>
	This enables pin 1 of the APIC timer.  It can be useful to work
	around chipset bugs (in particular on some ATI chipsets.)  The
	kernel tries to set a reasonable default but sometimes this option
	is necessary to override it.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>disable_timer_pin_1</refname>
    <refpurpose>Disable pin 1 of the APIC timer</refpurpose>
  </refnamediv>
<refsect1>
  <title>Description</title>
	<para>
	This disables pin 1 of the APIC timer.  It can be useful to work
	around chipset bugs (in particular on some ATI chipsets.)  The
	kernel tries to set a reasonable default but sometimes this option
	is necessary to override it.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>enable_8254_timer</refname>
    <refpurpose>Enables interrupt 0 timer routing over the 8254 chip</refpurpose>
  </refnamediv>
<refsect1>
  <title>Description</title>
	<para>
	Enable interrupt 0 timer routing over the 8254 chip in addition to
	over the IO-APIC. The kernel tries to set a reasonable default but
	sometimes this option is necessary to override it.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>disable_8254_timer</refname>
    <refpurpose>Disables interrupt 0 timer routing over the 8254 chip</refpurpose>
  </refnamediv>
<refsect1>
  <title>Description</title>
	<para>
	Disable interrupt 0 timer routing over the 8254 chip in addition to
	over the IO-APIC. The kernel tries to set a reasonable default but
	sometimes this option is necessary to override it.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>hpet</refname>
    <refpurpose>Disable HPET and use PIT instead</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>hpet=disable</literal>
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	This disables the HPET timer source tells the kernel to use the PIT
	timer source instead.
	</para>
</refsect1>
</refentry>

<refentry>
  <refnamediv>
    <refname>clocksource</refname>
    <refpurpose>Set the specific clocksource</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>clocksource=</literal>[<replaceable>hpet</replaceable>|<replaceable>pit</replaceable>|<replaceable>tsc</replaceable>|<replaceable>acpi_pm</replaceable>|<replaceable>cyclone</replaceable>|<replaceable>scx200_hrt</replaceable>]
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	Override the default kernel clocksource and use the clocksource
	with the specified name instead.
	</para>
</refsect1>
</refentry>

<!--

template for options...

<refentry>
  <refnamediv>
    <refname>
    </refname>
    <refpurpose>
    </refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <para>
    <literal>apic=</literal>[<replaceable>quiet</replaceable>(default)|<replaceable>verbose</replaceable>|<replaceable>debug</replaceable>]
    </para>
  </refsynopsisdiv>
<refsect1>
  <title>Description</title>
	<para>
	</para>
</refsect1>
</refentry>

-->


</sect1>
</chapter>
<!-- vim: set ai tw=72 : -->
